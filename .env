ENVIRONMENT=prod
APSCHEDULER_AUTOSTART=true
APSCHEDULER_CONFIG={"apscheduler.timezone": "Asia/Shanghai"}


# 以下配置项均有默认值，保持注释即使用默认值

# 默认牛牛轮盘模式，0为踢人，1为禁言
DEFAULT_ROULETTE_MODE=1

# 是否使用RPC连接数据库
# 请提前安装依赖：pip install grpcio grpcio-tools grpcio-reflection
#USE_RPC=false

# gRPC token
#RPC_TOKEN=your_rpc_token

# mongodb 相关配置，如无特殊需求，保持注释即可
# 使用 docker-compose 部署时，请将MONGO_HOST设置为 mongodb 容器 的 service 名称，如：MONGO_HOST=mongodb
# 使用RPC连接数据库时，请将mongodb的主机和端口替换为rpc服务的主机和端口

#MONGO_HOST=127.0.0.1
#MONGO_PORT=27017



# 复读机功能相关参数，推荐保持注释

# answer 相关阈值，值越大，牛牛废话越少；越小，牛牛废话越多
# ANSWER_THRESHOLD = 0.1

# answer 阈值权重
#ANSWER_THRESHOLD_WEIGHTS = [7, 23, 70]

# 上下文联想，记录多少个关键词（每个群）
# TOPICS_SIZE = 32

# 上下文命中后，额外的权重系数
#TOPICS_IMPORTANCE = 10000

# N 个群有相同的回复，就跨群作为全局回复
#CROSS_GROUP_THRESHOLD = 2

# 复读的阈值，群里连续多少次有相同的发言，就复读
#REPEAT_THRESHOLD = 3

# 主动发言的阈值，越小废话越多
# SPEAK_THRESHOLD = 2

# 说过的话，接下来多少次不再说
# DUPLICATE_REPLY = 6

# 按逗号分割回复语的概率
# SPLIT_PROBABILITY = 0.5

# 喝醉之后，超过多长的文本全部转换成语音发送，仅当配置了 tts 时有效
#DRUNK_TTS_THRESHOLD = 6

# 连续主动说话的概率
#SPEAK_CONTINUOUSLY_PROBABILITY = 0.5

# 主动说话加上随机戳一戳群友的概率
#SPEAK_POKE_PROBABILITY = 0.6

# 连续主动说话最多几句话
#SPEAK_CONTINUOUSLY_MAX_LEN = 2

# 每隔多久进行一次持久化（秒）
#SAVE_TIME_THRESHOLD = 3600

# 单个群超过多少条聊天记录就进行一次持久化，与时间是或的关系
#SAVE_COUNT_THRESHOLD = 1000

# 保存时，给内存中保留的大小
#SAVE_RESERVED_SIZE = 100



# sing 功能相关配置

# key 对应命令词，即“牛牛唱歌” or “兔兔唱歌”
# value 对应 resource/sing/models/ 下的文件夹名，以及生成的音频文件名，也要对应模型 config 文件里的 spk 字段
# 注意 .env 里 dict 不能换行哦，得在一行写完所有的
#SING_SPEAKERS={"帕拉斯": "pallas", "牛牛": "pallas"}

# 每次合成并发送的语音长度，单位：秒
#SING_LENGTH=120

# 指定sing功能使用的显卡
#SING_CUDA_DEVICE="0"



# chat 功能相关配置

#请参考 https://zhuanlan.zhihu.com/p/618011122 配置 strategy
#CHAT_STRATEGY=cuda fp16

# tts 功能相关配置

# 声码器，可选值：pwgan_aishell3、wavernn_csmsc
#TTS_VOCODER=pwgan_aishell3

# api 配置

# 是否启用 Chat api 服务
#CHAT_SERVER = False

# 是否启用 TTS api 服务
#TTS_SERVER = False

# Api HOST
#SERVER_HOST = 127.0.0.1

# Api port
#SERVER_PORT = 5000

# api 超时时间，机子差可以设长一点
#SEVER_TIMEOUT = 90

# api 重试次数
#SERVER_RETRY = 15